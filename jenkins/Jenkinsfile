pipeline {
  agent any

  environment {
    REGISTRY       = 'your-dockerhub-username'
    FRONTEND_IMAGE = "${REGISTRY}/frontend:latest"
    BACKEND_IMAGE  = "${REGISTRY}/backend:latest"
  }

  stages {
    stage('Checkout') {
      steps {
        checkout scm
      }
    }

    stage('Frontend Test & Lint') {
      agent {
        kubernetes {
          yaml """
apiVersion: v1
kind: Pod
spec:
  containers:
  - name: node
    image: node:18
    command: ["cat"]
    tty: true
"""
        }
      }
      steps {
        container('node') {
          dir('frontend') {
            sh '''
              npm ci
              npm run lint
              npm test || echo "No frontend tests found, skipping..."
            '''
          }
        }
      }
    }

    stage('Backend Test & Lint') {
      agent {
        kubernetes {
          yaml """
apiVersion: v1
kind: Pod
spec:
  containers:
  - name: python
    image: python:3.10
    command: ["cat"]
    tty: true
"""
        }
      }
      steps {
        container('python') {
          dir('backend') {
            sh '''
              pip install --no-cache-dir -r requirements.txt
              flake8 . || echo "Lint warnings found"
              pytest || echo "No backend tests found, skipping..."
            '''
          }
        }
      }
    }

  stages {
    stage('Build & Push Images') {
      agent {
        kubernetes {
          yaml """
apiVersion: v1
kind: Pod
spec:
  containers:
  - name: kaniko
    image: gcr.io/kaniko-project/executor:latest
    tty: true
    volumeMounts:
    - name: kaniko-secret
      mountPath: /kaniko/.docker/
  volumes:
  - name: kaniko-secret
    emptyDir: {}
"""
        }
      }
      steps {
        container('kaniko') {
          withCredentials([usernamePassword(credentialsId: 'dockerhub', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
            sh '''
              echo "ðŸ”‘ Configuring DockerHub authentication..."
              mkdir -p /kaniko/.docker
              echo "{\"auths\":{\"https://index.docker.io/v1/\":{\"username\":\"$DOCKER_USER\",\"password\":\"$DOCKER_PASS\"}}}" > /kaniko/.docker/config.json

              echo "ðŸš€ Building and pushing frontend image..."
              /kaniko/executor \
                --context=dir://$(pwd)/frontend \
                --dockerfile=$(pwd)/frontend/Dockerfile \
                --destination=$FRONTEND_IMAGE \
                --cache=true \
                --use-new-run

              echo "ðŸš€ Building and pushing backend image..."
              /kaniko/executor \
                --context=dir://$(pwd)/backend \
                --dockerfile=$(pwd)/backend/Dockerfile \
                --destination=$BACKEND_IMAGE \
                --cache=true \
                --use-new-run
            '''
          }
        }
      }
    }

    stage('Deploy to Kubernetes') {
      agent { label 'k8s-agent' }  // run on a node with kubectl
      steps {
        sh '''
          echo "ðŸš€ Deploying to Kubernetes..."
          kubectl apply -f k8s/
        '''
      }
    }
  }
}
